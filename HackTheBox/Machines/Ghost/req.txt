<?xml version="1.0"?>
<!DOCTYPE items [
<!ELEMENT items (item*)>
<!ATTLIST items burpVersion CDATA "">
<!ATTLIST items exportTime CDATA "">
<!ELEMENT item (time, url, host, port, protocol, method, path, extension, request, status, responselength, mimetype, response, comment)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT url (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT port (#PCDATA)>
<!ELEMENT protocol (#PCDATA)>
<!ELEMENT method (#PCDATA)>
<!ELEMENT path (#PCDATA)>
<!ELEMENT extension (#PCDATA)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT status (#PCDATA)>
<!ELEMENT responselength (#PCDATA)>
<!ELEMENT mimetype (#PCDATA)>
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT comment (#PCDATA)>
]>
<items burpVersion="2024.2.1.5" exportTime="Sat Jul 13 23:05:11 BST 2024">
  <item>
    <time>Sat Jul 13 23:04:45 BST 2024</time>
    <url><![CDATA[https://federation.ghost.htb/adfs/ls/?SAMLRequest=nVNNj5swEP0ryPfwYaxusUJWKTk00rZFCe2hl8oxwwbJ2NQz7Kb%2FvoKE3RzaHHL1m3nz5s3z8vHUmeAFPLbO5iwJY%2Fa4WqLqTC%2FXAx3tDn4PgBScOmNRTkDOBm%2BlU9iitKoDlKTlfv3lSfIwlr135LQzLNhucvYrEaCaVGjgdaZSODTphyzRtRA6TWsleJroNM5izoIfswgexizYIg6wtUjKUs54zMUiflgkacW5jLnkWSiyh58sKC%2FjPrW2bu3zbW2HcxHKz1VVLspv%2B4oFG0BqraJp9JGoRxlFDdTgp7fw%2BeiQwiMdIlU3GBmMWLBGBD%2BihbM4dOD34F9aDd93T%2B8c2nl475YfhUjPFKOJUe%2BQdoC9swjs7LicdvZXVt%2FeRs0q2OrGzGV0xT2f9qvqYLspnWn1n3tOuzbGvRYeFEHOyA%2FAopn6Ehiop%2FgUzhKc7opP4bpe%2BRbHu8BJaZptuiYujELcQXOPaTfLtNQjNaAsFeKr8%2FWYNNAEdeWVxd55ulj7Lz2rM%2FYfO97Q6y%2B2%2Bgs%3D&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=SFbvP%2FIRUIQBXGJUEypwR3O9lzUfvZZBVh6x0VQRxQFIaHhEVB2Nv9IbU1GiEzkKYzbB2Lv72iEd3RO3DfmbE7A4aqqg9FbkAjIztCrNUxmUqeCtedzw5pGx39NalEcVrytcVpvH9%2BvdBRiPmZqAKf8ObaPyPPsccbd2i2q2OVdFU3%2FHuo3DxRcqRfEbDT7VxVG1%2BrR16K4hWfy6qSFQU3ZiXuqR3E%2FfY2XSSFtFO80TkQ67zyMLQ%2BglpqHwgcguZCLSRG2WdF3hapMTjpbcKSO1KE3OySiv6zXNaXS7BGsBhvUp%2BkPLnLTeFF7i9VasoVQmEFmcq0JoKpu%2FZpG2HA%3D%3D&client-request-id=3ecbf6d4-47dd-4b30-5a0d-0040000000c5]]></url>
    <host ip="10.10.11.24">federation.ghost.htb</host>
    <port>443</port>
    <protocol>https</protocol>
    <method><![CDATA[POST]]></method>
    <path><![CDATA[/adfs/ls/?SAMLRequest=nVNNj5swEP0ryPfwYaxusUJWKTk00rZFCe2hl8oxwwbJ2NQz7Kb%2FvoKE3RzaHHL1m3nz5s3z8vHUmeAFPLbO5iwJY%2Fa4WqLqTC%2FXAx3tDn4PgBScOmNRTkDOBm%2BlU9iitKoDlKTlfv3lSfIwlr135LQzLNhucvYrEaCaVGjgdaZSODTphyzRtRA6TWsleJroNM5izoIfswgexizYIg6wtUjKUs54zMUiflgkacW5jLnkWSiyh58sKC%2FjPrW2bu3zbW2HcxHKz1VVLspv%2B4oFG0BqraJp9JGoRxlFDdTgp7fw%2BeiQwiMdIlU3GBmMWLBGBD%2BihbM4dOD34F9aDd93T%2B8c2nl475YfhUjPFKOJUe%2BQdoC9swjs7LicdvZXVt%2FeRs0q2OrGzGV0xT2f9qvqYLspnWn1n3tOuzbGvRYeFEHOyA%2FAopn6Ehiop%2FgUzhKc7opP4bpe%2BRbHu8BJaZptuiYujELcQXOPaTfLtNQjNaAsFeKr8%2FWYNNAEdeWVxd55ulj7Lz2rM%2FYfO97Q6y%2B2%2Bgs%3D&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=SFbvP%2FIRUIQBXGJUEypwR3O9lzUfvZZBVh6x0VQRxQFIaHhEVB2Nv9IbU1GiEzkKYzbB2Lv72iEd3RO3DfmbE7A4aqqg9FbkAjIztCrNUxmUqeCtedzw5pGx39NalEcVrytcVpvH9%2BvdBRiPmZqAKf8ObaPyPPsccbd2i2q2OVdFU3%2FHuo3DxRcqRfEbDT7VxVG1%2BrR16K4hWfy6qSFQU3ZiXuqR3E%2FfY2XSSFtFO80TkQ67zyMLQ%2BglpqHwgcguZCLSRG2WdF3hapMTjpbcKSO1KE3OySiv6zXNaXS7BGsBhvUp%2BkPLnLTeFF7i9VasoVQmEFmcq0JoKpu%2FZpG2HA%3D%3D&client-request-id=3ecbf6d4-47dd-4b30-5a0d-0040000000c5]]></path>
    <extension>null</extension>
    <request base64="true"><![CDATA[UE9TVCAvYWRmcy9scy8/U0FNTFJlcXVlc3Q9blZOTmo1c3dFUDByeVBmd1lheHVzVUpXS1RrMDByWkZDZTJobDhveHd3YkoyTlF6N0tiJTJGdm9LRTNSemFISEwxbTNuejVzM3o4dkhVbWVBRlBMYk81aXdKWSUyRmE0V3FMcVRDJTJGWEF4M3REbjRQZ0JTY09tTlJUa0RPQm0lMkJsVTlpaXRLb0RsS1RsZnYzbFNmSXdscjEzNUxRekxOaHVjdllyRWFDYVZHamdkYVpTT0RUcGh5elJ0UkE2VFdzbGVKcm9OTTVpem9JZnN3Z2V4aXpZSWc2d3RVaktVczU0ek1VaWZsZ2thY1c1akxua1dTaXloNThzS0MlMkZqUHJXMmJ1M3piVzJIY3hIS3oxVlZMc3B2JTJCNG9GRzBCcXJhSnA5SkdvUnhsRkRkVGdwN2Z3JTJCZWlRd2lNZElsVTNHQm1NV0xCR0JEJTJCaWhiTTRkT0QzNEY5YURkOTNUJTJCOGMybmw0NzVZZmhValBGS09KVWUlMkJRZG9DOXN3anM3TGljZHZaWFZ0JTJGZVJzMHEyT3JHekdWMHhUMmY5cXZxWUxzcG5XbjFuM3RPdXpiR3ZSWWVGRUhPeUElMkZBb3BuNkVoaW9wJTJGZ1V6aEtjN29wUDRicGUlMkJSYkh1OEJKYVpwdHVpWXVqRUxjUVhPUGFUZkx0TlFqTmFBc0ZlS3I4JTJGV1lOTkFFZGVXVnhkNTV1bGo3THoyck0lMkZZZk85N1E2eSUyQjIlMkJncyUzRCZTaWdBbGc9aHR0cCUzQSUyRiUyRnd3dy53My5vcmclMkYyMDAxJTJGMDQlMkZ4bWxkc2lnLW1vcmUlMjNyc2Etc2hhMjU2JlNpZ25hdHVyZT1TRmJ2UCUyRklSVUlRQlhHSlVFeXB3UjNPOWx6VWZ2WlpCVmg2eDBWUVJ4UUZJYUhoRVZCMk52OUliVTFHaUV6a0tZemJCMkx2NzJpRWQzUk8zRGZtYkU3QTRhcXFnOUZia0FqSXp0Q3JOVXhtVXFlQ3RlZHp3NXBHeDM5TmFsRWNWcnl0Y1Zwdkg5JTJCdmRCUmlQbVpxQUtmOE9iYVB5UFBzY2NiZDJpMnEyT1ZkRlUzJTJGSHVvM0R4UmNxUmZFYkRUN1Z4VkcxJTJCclIxNks0aFdmeTZxU0ZRVTNaaVh1cVIzRSUyRmZZMlhTU0Z0Rk84MFRrUTY3enlNTFElMkJnbHBxSHdnY2d1WkNMU1JHMldkRjNoYXBNVGpwYmNLU08xS0UzT3lTaXY2elhOYVhTN0JHc0JodlVwJTJCa1BMbkxUZUZGN2k5VmFzb1ZRbUVGbWNxMEpvS3B1JTJGWnBHMkhBJTNEJTNEJmNsaWVudC1yZXF1ZXN0LWlkPTNlY2JmNmQ0LTQ3ZGQtNGIzMC01YTBkLTAwNDAwMDAwMDBjNSBIVFRQLzEuMQ0KSG9zdDogZmVkZXJhdGlvbi5naG9zdC5odGINClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IHJ2OjEwOS4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzExNS4wDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCwqLyo7cT0wLjgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgYnINClJlZmVyZXI6IGh0dHBzOi8vZmVkZXJhdGlvbi5naG9zdC5odGIvYWRmcy9scy8/U0FNTFJlcXVlc3Q9blZOTmo1c3dFUDByeVBmd1lheHVzVUpXS1RrMDByWkZDZTJobDhveHd3YkoyTlF6N0tiJTJGdm9LRTNSemFISEwxbTNuejVzM3o4dkhVbWVBRlBMYk81aXdKWSUyRmE0V3FMcVRDJTJGWEF4M3REbjRQZ0JTY09tTlJUa0RPQm0lMkJsVTlpaXRLb0RsS1RsZnYzbFNmSXdscjEzNUxRekxOaHVjdllyRWFDYVZHamdkYVpTT0RUcGh5elJ0UkE2VFdzbGVKcm9OTTVpem9JZnN3Z2V4aXpZSWc2d3RVaktVczU0ek1VaWZsZ2thY1c1akxua1dTaXloNThzS0MlMkZqUHJXMmJ1M3piVzJIY3hIS3oxVlZMc3B2JTJCNG9GRzBCcXJhSnA5SkdvUnhsRkRkVGdwN2Z3JTJCZWlRd2lNZElsVTNHQm1NV0xCR0JEJTJCaWhiTTRkT0QzNEY5YURkOTNUJTJCOGMybmw0NzVZZmhValBGS09KVWUlMkJRZG9DOXN3anM3TGljZHZaWFZ0JTJGZVJzMHEyT3JHekdWMHhUMmY5cXZxWUxzcG5XbjFuM3RPdXpiR3ZSWWVGRUhPeUElMkZBb3BuNkVoaW9wJTJGZ1V6aEtjN29wUDRicGUlMkJSYkh1OEJKYVpwdHVpWXVqRUxjUVhPUGFUZkx0TlFqTmFBc0ZlS3I4JTJGV1lOTkFFZGVXVnhkNTV1bGo3THoyck0lMkZZZk85N1E2eSUyQjIlMkJncyUzRCZTaWdBbGc9aHR0cCUzQSUyRiUyRnd3dy53My5vcmclMkYyMDAxJTJGMDQlMkZ4bWxkc2lnLW1vcmUlMjNyc2Etc2hhMjU2JlNpZ25hdHVyZT1TRmJ2UCUyRklSVUlRQlhHSlVFeXB3UjNPOWx6VWZ2WlpCVmg2eDBWUVJ4UUZJYUhoRVZCMk52OUliVTFHaUV6a0tZemJCMkx2NzJpRWQzUk8zRGZtYkU3QTRhcXFnOUZia0FqSXp0Q3JOVXhtVXFlQ3RlZHp3NXBHeDM5TmFsRWNWcnl0Y1Zwdkg5JTJCdmRCUmlQbVpxQUtmOE9iYVB5UFBzY2NiZDJpMnEyT1ZkRlUzJTJGSHVvM0R4UmNxUmZFYkRUN1Z4VkcxJTJCclIxNks0aFdmeTZxU0ZRVTNaaVh1cVIzRSUyRmZZMlhTU0Z0Rk84MFRrUTY3enlNTFElMkJnbHBxSHdnY2d1WkNMU1JHMldkRjNoYXBNVGpwYmNLU08xS0UzT3lTaXY2elhOYVhTN0JHc0JodlVwJTJCa1BMbkxUZUZGN2k5VmFzb1ZRbUVGbWNxMEpvS3B1JTJGWnBHMkhBJTNEJTNEJmNsaWVudC1yZXF1ZXN0LWlkPTNlY2JmNmQ0LTQ3ZGQtNGIzMC01YTBkLTAwNDAwMDAwMDBjNQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNCkNvbnRlbnQtTGVuZ3RoOiAxMTQNCk9yaWdpbjogaHR0cHM6Ly9mZWRlcmF0aW9uLmdob3N0Lmh0Yg0KRG50OiAxDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtRmV0Y2gtRGVzdDogZG9jdW1lbnQNClNlYy1GZXRjaC1Nb2RlOiBuYXZpZ2F0ZQ0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtVXNlcjogPzENClRlOiB0cmFpbGVycw0KQ29ubmVjdGlvbjogY2xvc2UNCg0KVXNlck5hbWU9YWRtaW5pc3RyYXRvciU0MGdob3N0Lmh0YiZQYXNzd29yZD0lM0NzY3JpcHQlM0VhbGVydCUyODElMjklM0MlMkZzY3JpcHQlM0UmQXV0aE1ldGhvZD1Gb3Jtc0F1dGhlbnRpY2F0aW9u]]></request>
    <status>200</status>
    <responselength>25552</responselength>
    <mimetype>HTML</mimetype>
    <response base64="true"><![CDATA[]]></response>
    <comment></comment>
  </item>
</items>
